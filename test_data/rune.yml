version: 0
platforms:
  - Linux x86_64
  - Windows x86_64
wrapper:
  language: c
  in_headers: wrapper.h
  out_header: wrapper.gen.h
  out_source: wrapper.gen.c
from:
  language: c
  shared: libfoo.so
  headers:
    - 'foo.h'
    - 'foz.h'
    - 'bar.h'
  headers.macos: plat_macos.h
  includedirs: include
  enable_host_includes: true
  enable_host_includes.linux.arm64: false
  disable_system_include_gen: true
  disable_system_include_gen.windows: false
  disable_stdint_macros: true
  disable_stdint_macros.windows: false
  load_all_includes: true
  load_all_includes.macos: false
  forward_decl_type.linux: '#Untyped'
  forward_decl_type.windows: '#SInt32'
  defines:
    MYFOO: !!int 2
  overwrite:
    types:
      size_t: "#UInt64"
      func_ptr.return: '#RawPtr'
      func_ptr.param.0.name: 'bar'
      func_ptr.param.1.type: 'wl_seat #Attr Ptr 1 #AttrEnd'
    functions:
      funcy.param.0.name: 'input'
      sunky.param.1.type: 'output'
      uinky.return: '#SInt32'
  extern:
    - 'test_data/the_system/*'
  remaps:
    wl_surface_interface: wl_surface_interface_v
    wl_cursor_interface: wl_cursor_interface_v
  aliases:
    SDL_Event: SDL_Happening
    SDL_Renderer: [SDL_Painter, SDL_Drawer]
to:
  language: odin
  static_switch: FOO_STATIC
  package: foo
  trim_prefix:
    functions: foo_
    variables: bar_
    types: [baz_, SDL_]
  trim_suffix:
    types: _t
  extern:
    trim_prefix: true
    sources:
      'SDL2/SDL_Event.h': 'vendor:sdl2'
      'SDL2/SDL_Renderer.h': 'vendor:sdl2'
    remaps:
      'SDL_Renderer': 'Renderer'
  add_libs: libGL.so
  add_libs.linux:
    - libEGL.so
    - libGLX.so
  add_libs.windows.x86_64: lib/GLx86.lib
